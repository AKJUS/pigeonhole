require "vnd.dovecot.testsuite";
require "variables";
require "extlists";
require "encoded-character";

# Warning: addressbook lookups are cached in interpreter context,
# which means that changing the test message will not have the
# expected effect when the addressbook test is executed in the
# testsuite script itself.

test_config_set "sieve_extlists_list" ":addrbook:default :addrbook:empty :addrbook:company";
test_config_set "sieve_extlists_list/:addrbook:default/name" ":addrbook:default";
test_config_set "sieve_extlists_list/:addrbook:default/dict" "file";
test_config_set "sieve_extlists_list/:addrbook:default/dict/file/driver" "file";
test_config_set "sieve_extlists_list/:addrbook:default/dict/file/path"
	"${tst.path}/addressbook.dict";
test_config_set "sieve_extlists_list/:addrbook:empty/name" ":addrbook:empty";
test_config_set "sieve_extlists_list/:addrbook:company/name" ":addrbook:company";
test_config_set "sieve_extlists_list/:addrbook:company/dict" "file";
test_config_set "sieve_extlists_list/:addrbook:company/dict/file/driver" "file";
test_config_set "sieve_extlists_list/:addrbook:company/dict/file/path"
	"${tst.path}/addressbook-company.dict";
test_config_reload :extension "extlists";

test_set "message" text:
From: <stephan@example.com>
Subject: Frop!
To: <user@example.org>
Cc: <useraa@example.org>, <userab@example.org>, <userac@example.org>,
 <userad@example.org>, <userae@example.org>, <useraf@example.org>,
 <userag@example.org>, <userah@example.org>, <userai@example.org>,
 <useraj@example.org>, <userak@example.org>, <useral@example.org>,
 <useram@example.org>, <useran@example.org>, <userao@example.org>,
 <userap@example.org>, <useraq@example.org>, <userar@example.org>,
 <useras@example.org>, <userat@example.org>, <userau@example.org>,
 <userav@example.org>, <useraw@example.org>, <userax@example.org>,
 <useray@example.org>, <useraz@example.org>, <user35@example.org>

Frop
.
;

test "Two lists" {
	if not address :list "cc" ["urn:ietf:params:sieve:addrbook:default",
				   "urn:ietf:params:sieve:addrbook:company"] {
		test_fail "should have matched";
	}
	if not string "${0}" "user35@example.org" {
		test_fail "match value not correct: ${0}";
	}
	if not address :list "cc" ":addrbook:default" {
		test_fail "shorthand should have matched";
	}
	if not string "${0}" "user35@example.org" {
		test_fail "shorthand match value not correct: ${0}";
	}
}
